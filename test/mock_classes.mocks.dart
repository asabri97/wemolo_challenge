// Mocks generated by Mockito 5.4.4 from annotations
// in wemolo_challenge/test/mock_classes.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:graphql_flutter/graphql_flutter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:wemolo_challenge/core/graphql/graphql_service.dart' as _i3;
import 'package:wemolo_challenge/data/models/parking_lot.dart' as _i7;
import 'package:wemolo_challenge/data/repositories/parking_lot_repository_impl.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGraphQLClient_0 extends _i1.SmartFake implements _i2.GraphQLClient {
  _FakeGraphQLClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryResult_1<TParsed extends Object?> extends _i1.SmartFake
    implements _i2.QueryResult<TParsed> {
  _FakeQueryResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraphQLService_2 extends _i1.SmartFake
    implements _i3.GraphQLService {
  _FakeGraphQLService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GraphQLService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphQLService extends _i1.Mock implements _i3.GraphQLService {
  MockGraphQLService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiUrl => (super.noSuchMethod(
        Invocation.getter(#apiUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#apiUrl),
        ),
      ) as String);

  @override
  _i2.GraphQLClient getClient() => (super.noSuchMethod(
        Invocation.method(
          #getClient,
          [],
        ),
        returnValue: _FakeGraphQLClient_0(
          this,
          Invocation.method(
            #getClient,
            [],
          ),
        ),
      ) as _i2.GraphQLClient);

  @override
  _i5.Future<_i2.QueryResult<Object?>> fetchParkingLots(
    int? limit,
    int? offset,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchParkingLots,
          [
            limit,
            offset,
          ],
        ),
        returnValue: _i5.Future<_i2.QueryResult<Object?>>.value(
            _FakeQueryResult_1<Object?>(
          this,
          Invocation.method(
            #fetchParkingLots,
            [
              limit,
              offset,
            ],
          ),
        )),
      ) as _i5.Future<_i2.QueryResult<Object?>>);
}

/// A class which mocks [ParkingLotRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockParkingLotRepositoryImpl extends _i1.Mock
    implements _i6.ParkingLotRepositoryImpl {
  MockParkingLotRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GraphQLService get graphqlService => (super.noSuchMethod(
        Invocation.getter(#graphqlService),
        returnValue: _FakeGraphQLService_2(
          this,
          Invocation.getter(#graphqlService),
        ),
      ) as _i3.GraphQLService);

  @override
  _i5.Future<List<_i7.ParkingLotModel>> fetchParkingLots(
    int? limit,
    int? offset,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchParkingLots,
          [
            limit,
            offset,
          ],
        ),
        returnValue: _i5.Future<List<_i7.ParkingLotModel>>.value(
            <_i7.ParkingLotModel>[]),
      ) as _i5.Future<List<_i7.ParkingLotModel>>);
}
